import re

def password_strength(password):
    length_criteria = len(password) >= 8
    uppercase_criteria = re.search(r'[A-Z]', password) is not None
    lowercase_criteria = re.search(r'[a-z]', password) is not None
    number_criteria = re.search(r'\d', password) is not None
    special_char_criteria = re.search(r'[!@#$%^&*(),.?":{}|<>]', password) is not None

    criteria_met = sum([length_criteria, uppercase_criteria, lowercase_criteria, number_criteria, special_char_criteria])
    
    if criteria_met == 5:
        strength = "Very Strong"
    elif criteria_met == 4:
        strength = "Strong"
    elif criteria_met == 3:
        strength = "Moderate"
    elif criteria_met == 2:
        strength = "Weak"
    else:
        strength = "Very Weak"
    
    feedback = f"Password strength: {strength}\n"
    if not length_criteria:
        feedback += "- Password should be at least 8 characters long.\n"
    if not uppercase_criteria:
        feedback += "- Password should contain at least one uppercase letter.\n"
    if not lowercase_criteria:
        feedback += "- Password should contain at least one lowercase letter.\n"
    if not number_criteria:
        feedback += "- Password should contain at least one number.\n"
    if not special_char_criteria:
        feedback += "- Password should contain at least one special character.\n"

    return feedback

def main():
    while True:
         password = input("Enter a password to assess its strength: ")
        feedback = password_strength(password)
        print(feedback)
        
        again = input("Do you want to assess another password? (y/n): ").lower()
        if again != 'y':
            break

if __name__ == "__main__":
    main()
